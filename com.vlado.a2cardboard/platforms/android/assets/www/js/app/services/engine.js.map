{"version":3,"sources":["app/services/engine.ts"],"names":["Engine","Engine.constructor","Engine.constructor.init","Engine.constructor.resize","Engine.constructor.animate"],"mappings":"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","file":"app/services/engine.js","sourcesContent":["\ndeclare var THREE: any;\ndeclare var Boid: any;\ndeclare var Bird: any;\n\nexport class Engine {\n\n    public scene: any;\n    public camera: any;\n    public renderer: any;\n    public mesh: any;\n    public controls: any;\n    public geometry: any;\n    public container: any;\n    public vector: any;\n    public birds: any;\n    public boids: any;\n\n    constructor(appElement: any) {\n\n        init();\n        animate();\n\n        function init() {\n\n            this.birds = [];\n            this.boids = [];\n\n            this.container = appElement;\n            this.scene = new THREE.Scene();\n\n            this.camera = new THREE.PerspectiveCamera(95, window.innerWidth / window.innerHeight, 0.001, 1500);\n            this.camera.position.set(0, 10, 0);\n            this.vector = new THREE.Vector3(0, 10, 0);\n\n            this.scene.add(this.camera);\n\n            this.renderer = new THREE.WebGLRenderer();\n            this.renderer.setSize(window.innerWidth, window.innerHeight);\n            this.renderer.domElement.style.position = \"absolute\";\n            this.renderer.domElement.style.top = 0;\n            this.container.appendChild(this.renderer.domElement);\n\n            this.effect = new THREE.StereoEffect(this.renderer);\n            this.effect.eyeSeparation = -1;\n\n            this.geometry = new THREE.SphereGeometry(500, 16, 8);\n            this.geometry.applyMatrix(new THREE.Matrix4().makeScale(-1, 1, 1));\n\n            let texloader = new THREE.TextureLoader();\n            texloader.anisotropy = 16;\n\n            let material = new THREE.MeshBasicMaterial({\n                map: texloader.load(\"images/jump.jpg\")\n            });\n\n            let mesh = new THREE.Mesh(this.geometry, material);\n            this.scene.add(mesh);\n\n            for (let i = 0; i < 200; i++) {\n\n                let boid = new Boid();\n                this.boids.push(boid);\n                boid.position.x = Math.random() * 400 - 200;\n                boid.position.y = Math.random() * 400 - 200;\n                boid.position.z = Math.random() * 400 - 200;\n                boid.velocity.x = Math.random() * 2 - 1;\n                boid.velocity.y = Math.random() * 2 - 1;\n                boid.velocity.z = Math.random() * 2 - 1;\n                boid.setAvoidWalls(true);\n                boid.setWorldSize(500, 500, 400);\n\n                let bird = new THREE.Mesh(new Bird(),\n                    new THREE.MeshBasicMaterial({ color: Math.random() * 0xffffff, side: THREE.DoubleSide })\n                );\n                this.birds.push(bird);\n                bird.phase = Math.floor(Math.random() * 62.83);\n                this.scene.add(bird);\n            }\n\n            window.addEventListener(\"resize\", resize, false);\n            setTimeout(resize, 1);\n\n            this.controls = new THREE.DeviceOrientationControls(this.camera, !0);\n            this.controls.connect();\n            this.controls.update();\n        }\n\n        function resize() {\n            this.camera.aspect = window.innerWidth / window.innerHeight;\n            this.camera.updateProjectionMatrix();\n\n            this.renderer.setSize(window.innerWidth, window.innerHeight);\n            this.effect.setSize(window.innerWidth, window.innerHeight);\n        }\n\n        function animate(t: any = null) {\n            requestAnimationFrame(animate);\n\n            this.controls.update();\n\n            for (let i = 0, il = this.birds.length; i < il; i++) {\n\n                let boid = this.boids[i];\n                boid.run(this.boids);\n\n                let bird = this.birds[i];\n                bird.position.copy(this.boids[i].position);\n\n                let color = bird.material.color;\n                color.r = color.g = color.b = (500 - bird.position.z) / 1000;\n\n                bird.rotation.y = Math.atan2(- boid.velocity.z, boid.velocity.x);\n                bird.rotation.z = Math.asin(boid.velocity.y / boid.velocity.length());\n\n                bird.phase = (bird.phase + (Math.max(0, bird.rotation.z) + 0.1)) % 62.83;\n                bird.geometry.vertices[5].y = bird.geometry.vertices[4].y = Math.sin(bird.phase) * 5;\n            }\n\n            this.effect.render(this.scene, this.camera);\n        }\n    }\n}\n"],"sourceRoot":"/source/"}